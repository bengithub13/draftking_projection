

testing branch branchtest1


sometimes project is not recognize as maven web project and deployement assembly is missing in the projects propertes

go to dos prompt and type in
mvn eclipse:eclipse -Dwtpversion=2.0




testbranch-2 added this line by branch testbranch-2


run time argument in run configuration:
-Dlog4j.configuration="file:C:\Users\BenPoon\workspace\webproject\src\test\resources\META-INF\log4j.properties.txt"




when running project in server inside eclipse

SEVERE: Error configuring application listener of class org.springframework.web.context.ContextLoaderListener
java.lang.ClassNotFoundException: org.springframework.web.context.ContextLoaderListener

solved by 


    Open the project's properties (e.g., right-click on the project's name in the project explorer and select "Properties").
    Select "Deployment Assembly".
    Click the "Add..." button on the right margin.
    Select "Java Build Path Entries" from the menu of Directive Type and click "Next".
    Select "Maven Dependencies" from the Java Build Path Entries menu and click "Finish".

You should see "Maven Dependencies" added to the Web Deployment Assembly definition.

sometimes need to clean tomcat

new computer host name:  changed and oracle listener cant connect anymore.
Bens_asus_pc

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
in order to deploy to tomcat :
added following:
 1- in pom.xml
<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<url>http://localhost:8181/manager/text</url>
						<server>Tomcatserver</server>
						<port>8181</port>
						<path>/draftking</path>
						<username>admin</username>
						<password>admin</password>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>start-tomcat</id>
							<goals>
								<goal>run-war</goal>
							</goals>
							<phase>pre-integration-test</phase>
							<configuration>
								<!-- <port>${test.server.port}</port> -->
								<port>8181</port>
								<path>/draftking</path>
								<fork>true</fork>
								<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
							</configuration>
						</execution>
						<execution>
							<id>stop-tomcat</id>
							<goals>
								<goal>shutdown</goal>
							</goals>
							<phase>post-integration-test</phase>
							<configuration>
								<path>/draftking</path>
							</configuration>
						</execution>
					</executions>
				</plugin>
		2-  apachetomcat folder\conf\settings.xml
		
				<server>
			<id>Tomcatserver</id>
			<username>admin</username>
			<password>admin</password>
		</server>
	</servers>
	
	
	
	3-apache folder/cong/server.xml  - port 8181 because oracle was defaulted to port 8080

	
	   <Connector port="8181" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
	4- .m2/setting.xml
	
		<server>
			<id>Tomcatserver</id>
			<username>admin</username>
			<password>admin</password>
		</server>
		
		5-apache folder/conf/tomcat-users.xml  
<role rolename="manager"/>
<role rolename="manager-gui"/>
<role rolename="manager-script"/>
  <user username="admin" password="admin" roles="manager-script,
manager-gui"/>
</tomcat-users>		
				
				
			+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	 
			
			adding global jndi to tomcat   - apache folder\conf\server.xml
			
			  <GlobalNamingResources>
  <Resource  name="jms/ConnectionFactory" auth="Container" type="org.apache.activemq.ActiveMQConnectionFactory"
   description="JMS Connection Factory" factory="org.apache.activemq.jndi.JNDIReferenceFactory"
   brokername="MyBroker" 
  brokerurl="tcp://127.0.0.1:61616" 
 />


<!-- define activemq -->
<Resource name="jms/MyQueue" auth="Container" type="org.apache.activemq.command.ActiveMQQueue"
description="A sample queue" 
factory="org.apache.activemq.jndi.JNDIReferenceFactory" 
physicalname="TEST.Q1"/>
			
			
			
			
			to check out from git
			
			clone a new repo and add to workspace
 
